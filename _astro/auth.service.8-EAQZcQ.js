const w="EcoWatch",u="1.0.0",c=()=>"https://wascal-backend.onrender.com",p=["/","/about","/contact","/privacy","/terms","/auth/login","/auth/register","/auth/forgot-password","/auth/reset-password","/auth/verify-email","/auth/callback/*"],k=["/dashboard","/dashboard/*","/map","/analytics","/monitoring","/predictions","/alerts","/reports","/settings","/profile","/admin/*"],y=["/auth/login","/auth/register","/auth/forgot-password","/auth/reset-password"];class h{get baseUrl(){return c()}tokenKey="access_token";refreshTokenKey="refresh_token";userKey="user_data";async login(e){try{console.log("Using API Base URL:",this.baseUrl);const r=await fetch(`${this.baseUrl}/api/auth/login`,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({username:e.email,password:e.password})});if(!r.ok){const s=await r.json();throw new Error(s.detail||"Login failed")}const t=await r.json();return this.setTokens(t.access_token,t.refresh_token),this.setUser(t.user),{user:t.user,access_token:t.access_token,refresh_token:t.refresh_token,token_type:t.token_type}}catch(r){throw new Error(r instanceof Error?r.message:"Login failed")}}async register(e){try{const r=await fetch(`${this.baseUrl}/api/auth/register`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({firstname:e.firstname,lastname:e.lastname,email:e.email,password:e.password,phone:e.phone||null})});if(!r.ok){const s=await r.json();throw new Error(s.detail||"Registration failed")}const t=await r.json();return{user:null,access_token:"",refresh_token:"",token_type:"bearer"}}catch(r){throw new Error(r instanceof Error?r.message:"Registration failed")}}async logout(){try{const e=this.getAccessToken();e&&await fetch(`${this.baseUrl}/api/auth/logout`,{method:"POST",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"}})}catch(e){console.error("Logout error:",e)}finally{this.clearTokens(),this.clearUser()}}async refreshToken(){try{const e=this.getRefreshToken();if(!e)throw new Error("No refresh token available");const r=await fetch(`${this.baseUrl}/api/auth/refresh`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({refresh_token:e})});if(!r.ok)throw new Error("Token refresh failed");const t=await r.json();return this.setAccessToken(t.access_token),t.user&&this.setUser(t.user),t.access_token}catch(e){throw this.clearTokens(),this.clearUser(),e}}async getCurrentUser(){try{const e=this.getAccessToken();if(!e)return null;const r=await fetch(`${this.baseUrl}/api/auth/me`,{headers:{Authorization:`Bearer ${e}`}});if(!r.ok){if(r.status===401)try{if(await this.refreshToken())return this.getCurrentUser()}catch(s){return console.error("Token refresh failed:",s),null}throw new Error("Failed to get current user")}const t=await r.json();return this.setUser(t),t}catch(e){return console.error("Get current user error:",e),null}}async changePassword(e,r){try{const t=this.getAccessToken();if(!t)throw new Error("No access token");const s=await fetch(`${this.baseUrl}/api/auth/password/change`,{method:"POST",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},body:JSON.stringify({current_password:e,new_password:r})});if(!s.ok){const o=await s.json();throw new Error(o.detail||"Password change failed")}}catch(t){throw new Error(t instanceof Error?t.message:"Password change failed")}}async requestPasswordReset(e){try{const r=await fetch(`${this.baseUrl}/api/auth/password/reset/request`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e})});if(!r.ok){const t=await r.json();throw new Error(t.detail||"Password reset request failed")}}catch(r){throw new Error(r instanceof Error?r.message:"Password reset request failed")}}async resetPassword(e,r){try{const t=await fetch(`${this.baseUrl}/api/auth/password/reset/confirm`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({token:e,new_password:r})});if(!t.ok){const s=await t.json();throw new Error(s.detail||"Password reset failed")}}catch(t){throw new Error(t instanceof Error?t.message:"Password reset failed")}}async verifyEmail(e){try{const r=await fetch(`${this.baseUrl}/api/auth/verify-email`,{method:"GET",headers:{"Content-Type":"application/json"},body:JSON.stringify({token:e})});if(!r.ok){const t=await r.json();throw new Error(t.detail||"Email verification failed")}}catch(r){throw new Error(r instanceof Error?r.message:"Email verification failed")}}async resendVerificationEmail(e){try{const r=await fetch(`${this.baseUrl}/api/auth/resend-verification`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e})});if(!r.ok){const t=await r.json();throw new Error(t.detail||"Failed to resend verification email")}}catch(r){throw new Error(r instanceof Error?r.message:"Failed to resend verification email")}}async initiateOAuthLogin(e){try{const r=await fetch(`${this.baseUrl}/api/auth/oauth/${e}/login`);if(!r.ok)throw new Error(`Failed to initiate ${e} OAuth`);return(await r.json()).auth_url}catch(r){throw new Error(r instanceof Error?r.message:`${e} OAuth failed`)}}async handleOAuthCallback(e,r,t){try{const s=new URL(`${this.baseUrl}/api/auth/oauth/${e}/callback`);s.searchParams.append("code",r),t&&s.searchParams.append("state",t);const o=await fetch(s.toString());if(!o.ok)throw new Error(`OAuth callback failed for ${e}`);if(o.redirected){const i=new URL(o.url),a=i.searchParams.get("access_token"),n=i.searchParams.get("refresh_token");if(a&&n)return this.setTokens(a,n),{user:await this.getCurrentUser(),access_token:a,refresh_token:n,token_type:"bearer"}}return await o.json()}catch(s){throw new Error(s instanceof Error?s.message:"OAuth callback failed")}}setTokens(e,r){typeof window<"u"&&(localStorage.setItem(this.tokenKey,e),localStorage.setItem(this.refreshTokenKey,r))}setAccessToken(e){typeof window<"u"&&localStorage.setItem(this.tokenKey,e)}getAccessToken(){return typeof window<"u"?localStorage.getItem(this.tokenKey):null}getRefreshToken(){return typeof window<"u"?localStorage.getItem(this.refreshTokenKey):null}clearTokens(){typeof window<"u"&&(localStorage.removeItem(this.tokenKey),localStorage.removeItem(this.refreshTokenKey))}setUser(e){typeof window<"u"&&localStorage.setItem(this.userKey,JSON.stringify(e))}getStoredUser(){if(typeof window<"u"){const e=localStorage.getItem(this.userKey);return e?JSON.parse(e):null}return null}clearUser(){typeof window<"u"&&localStorage.removeItem(this.userKey)}isAuthenticated(){return!!this.getAccessToken()}getAuthHeaders(){const e=this.getAccessToken();return e?{Authorization:`Bearer ${e}`}:{}}isTokenExpired(){const e=this.getAccessToken();if(!e)return!0;try{const r=JSON.parse(atob(e.split(".")[1])),t=Date.now()/1e3;return r.exp<t}catch{return!0}}async ensureValidToken(){if(!this.isAuthenticated())return null;if(this.isTokenExpired())try{return await this.refreshToken()}catch{return this.clearTokens(),this.clearUser(),null}return this.getAccessToken()}}const g=new h;export{w as A,y as G,p as P,g as a,k as b,u as c,c as g};
